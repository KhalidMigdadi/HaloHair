@model HaloHair.Models.Salon

@{
	ViewData["Title"] = "SalonMen";
	Layout = "~/Views/Shared/_Layout_Men.cshtml";
}

@section Style {
	<link href="~/css/SalonMen/salonMen.css" rel="stylesheet" />
}

<div class="salon-container">
	<!-- Salon Header (Same functionality) -->
	<div class="salon-header">
		<h1>@Model.Name</h1>
		<div class="salon-actions">
			<i class="fa-solid fa-share fa-lg"></i>
			<i class="fa-regular fa-heart fa-lg favorite-icon"
			id="favorite-@Model.Id"
			data-salon-id="@Model.Id"
			data-is-favorite="@ViewBag.IsFavorite"></i>
		</div>
	</div>

	<!-- Gallery Section (Same functionality) -->
	<div class="gallery-section">
		@if (Model.SalonImages.Any())
		{
			<div class="main-image">
				<img src="@Model.SalonImages.First().ImageUrl" alt="@Model.Name" />
			</div>
			<div class="thumbnail-container">
				@foreach (var image in Model.SalonImages.Skip(1))
				{
					<img src="@image.ImageUrl" alt="@Model.Name" class="thumbnail" />
				}
			</div>
		}
		else
		{
			<div class="no-images">
				<i class="fas fa-camera"></i>
				<p>No images available</p>
			</div>
		}
	</div>

	<!-- Services Section (Same functionality) -->
	<div class="info-sections">
		<!-- Services Section -->
		<div class="services-section">
			<h2>Services</h2>
			<div class="filter-container">
				<label for="service-filter">Filter by Service:</label>
				<select id="service-filter" onchange="filterServices()">
					<option value="all">All Services</option>
					<option value="discount">Discounts</option>
					<option value="consultant">Consultant</option>
					<option value="haircut">Hair Cut</option>
					<option value="beard">Beard</option>
					<option value="packages">Packages</option>
				</select>
			</div>

			<div class="services-list">
				@if (Model.Services.Any())
				{
					@foreach (var service in Model.Services.Take(5))
					{
						<div class="service-card" data-category="@GetServiceCategory(service.ServiceName)">
							<div class="service-info">
								<h3>@service.ServiceName</h3>
								<p class="duration">@service.Duration mins</p>
								<p class="price">@service.Price JOD</p>
							</div>
						</div>
					}
					<a href="@Url.Action("SelectService", "MenAppointments", new { salonId = Model.Id })" class="see-all-btn">See All</a>
				}
				else
				{
					<p>No services available for this salon.</p>
				}
			</div>
		</div>

		<!-- Team Section -->
		<div class="team-section">
			<h2>Our Team</h2>
			<div class="team-container">
				@foreach (var barber in Model.Barbers)
				{
					<div class="team-card">
						<div class="team-info">
							<h3>@barber.FirstName @barber.LastName</h3>
							<p>@(barber.UserType ?? "Barber")</p>
						</div>
					</div>
				}
			</div>
		</div>
	</div>


	<!-- About Section (Same functionality) -->
	<div class="about-section">
		<h2>About @Model.Name Salon</h2>
		<p>@Model.AboutSalon</p>
	</div>

	<!-- Location Section (Same functionality) -->
	<div class="location-section">
		<h2>Salon Location</h2>

		<div class="location-info">
			<p><i class="fas fa-map-marker-alt"></i> @Model.Address</p>

			@if (Model.Latitude != null && Model.Longitude != null)
			{
				<div id="salon-map"></div>
			}
			else
			{
				<div class="no-location">
					<i class="fas fa-map-marked-alt"></i>
					<p>Location not available</p>
				</div>
			}
		</div>
	</div>

	<!-- Hours Section (Same functionality) -->
	<div class="working-hours-grid">
		@foreach (var hour in Model.WorkingHours)
		{
			<div class="hour-card @(hour.DayOfWeek == DateTime.Now.DayOfWeek.ToString() ? "today" : "")">
				<div class="day">@hour.DayOfWeek</div>
				<div class="time">
					@if (hour.IsClosed)
					{
						<span class="closed">Closed</span>
					}
					else
					{
						<span>@hour.OpeningTime?.ToString("HH:mm") - @hour.ClosingTime?.ToString("HH:mm")</span>
					}
				</div>
			</div>
		}
	</div>




	<!-- Portfolio Section (Same functionality) -->
	<div class="portfolio-section">
		<h2>Our Salon Work</h2>

		<div class="portfolio-grid">
			@foreach (var barber in Model.Barbers)
			{
				if (barber.BarberWorkImages != null && barber.BarberWorkImages.Any())
				{
					foreach (var workImage in barber.BarberWorkImages)
					{
						<div class="portfolio-item">
							<img src="@workImage.ImageUrl" alt="Barber work" />
						</div>
					}
				}
			}
		</div>
	</div>

	<!-- Reviews Section (Same functionality) -->
	<div class="reviews-section">
		<h2>What Our Customers Say</h2>

		<div class="reviews-container">
			@if (Model.Reviews != null && Model.Reviews.Any())
			{
				foreach (var review in Model.Reviews.OrderByDescending(r => r.CreatedAt).Take(3))
				{
					<div class="review-card">
						<div class="reviewer-info">
							<span class="reviewer-name">@review.User.FirstName @review.User.LastName</span>
							<div class="review-rating">
								@for (int i = 0; i < (review.Rating ?? 0); i++)
								{
									<span>⭐</span>
								}
							</div>
						</div>
						<p class="review-comment">@review.Comment</p>
					</div>
				}
			}
			else
			{
				<p>No reviews available yet.</p>
			}
		</div>
	</div>
</div>

@section Scripts {
	<!-- Same scripts as original -->
	<script src="~/js/salon.js"></script>

	<!-- Same favorite logic -->
	<script>
		$(document).ready(function () {
			updateFavoriteIcon();

			$('.favorite-icon').click(function () {
				var salonId = $(this).data('salon-id');
				toggleFavorite(salonId);
			});

			function toggleFavorite(salonId) {
				$.ajax({
					url: '@Url.Action("ToggleFavorite", "MenSalon")',
					type: 'POST',
					data: { salonId: salonId },
					success: function (result) {
						if (result.success) {
							$('#favorite-' + salonId).data('is-favorite', result.isFavorite);
							updateFavoriteIcon();
						}
					}
				});
			}

			function updateFavoriteIcon() {
				$('.favorite-icon').each(function () {
					var isFavorite = $(this).data('is-favorite') === true;
					if (isFavorite) {
						$(this).removeClass('fa-regular').addClass('fa-solid');
						$(this).css('color', '#e91e63');
					} else {
						$(this).removeClass('fa-solid').addClass('fa-regular');
						$(this).css('color', '');
					}
				});
			}
		});
	</script>

	<!-- Same map logic -->
	@if (Model.Latitude != null && Model.Longitude != null)
	{
		<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
		<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

		<script>
			document.addEventListener('DOMContentLoaded', function () {
				var map = L.map('salon-map').setView([@Model.Latitude, @Model.Longitude], 15);

				L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
					attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
				}).addTo(map);

				L.marker([@Model.Latitude, @Model.Longitude]).addTo(map)
					.bindPopup("<b>@Model.Name</b><br>@Model.Address")
					.openPopup();
			});
		</script>
	}
}

@functions {
	public string GetServiceCategory(string serviceName)
	{
		if (string.IsNullOrEmpty(serviceName)) return "other";

		serviceName = serviceName.ToLower();

		if (serviceName.Contains("discount")) return "discount";
		if (serviceName.Contains("consult")) return "consultant";
		if (serviceName.Contains("hair cut") || serviceName.Contains("haircut")) return "haircut";
		if (serviceName.Contains("beard")) return "beard";
		if (serviceName.Contains("package")) return "packages";

		return "other";
	}
}